@model TravelAgency.ViewModel.BookingModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


    <div id="content">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4 class="panel-title">Fill Booking Form</h4>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Create", "Booking", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.customername, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                         @Html.EditorFor(model => model.customername, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                               @Html.ValidationMessageFor(model => model.customername, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.customersurname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.customersurname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                           @Html.ValidationMessageFor(model => model.customersurname, "", new { @class = "text-danger" })
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.birthdate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off",size = "55" } })
                           @Html.ValidationMessageFor(model => model.birthdate, "", new { @class = "text-danger" })
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "(###)###-####" } })
                           @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "domain@mail.com" } })
                           @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px" @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                           @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px"> @Html.LabelFor(model => model.tourid, htmlAttributes: new { @class = "control-label col-md-2" })</p>
                <div class="col-md-10">
                   @Html.DropDownList("tourid", Model.TourTList, htmlAttributes: new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.tourid, "", new { @class = "text-danger" })
                   
                </div>
                </div>
                <br />
                <br />
                <br />
                <div class="form-group">
                    <p style="font-size:16px"> @Html.LabelFor(model => model.hotelid, htmlAttributes: new { @class = "control-label col-md-2" })</p>
                    <div class="col-md-10">

                        @Html.DropDownList("hotelid", Model.HotelTList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.hotelid, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <br />
                <br />
                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Book" class="btn  btn-3d btn-success" />
                        <br />
                        <br />
                    </div>
                </div>
               
               


                }
<script src="~/scripts/jquery.validate.js"></script>
<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
@section scripts
{
    <script type="text/javascript">
                $(document).ready(function () {
                    $("#tourid").change(function () {
                        var id = $(this).val();
                        var hotelList = $("#hotelid");

                        hotelList.empty();
                        $.ajax({
                            url: '/Booking/HotelList',
                            type: 'POST',
                            dataType: 'json',
                            data: { 'id': id },
                            success: function (data) {
                                $.each(data, function (index, option) {
                                    hotelList.append('<option value=' + option.Value + '> ' + option.Text + ' </option');
                                });
                            }
                        });
                    });
                });
    </script>
}